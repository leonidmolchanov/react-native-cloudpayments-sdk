import type { ReactNode } from 'react';
import clsx from 'clsx';
import Heading from '@theme/Heading';
import styles from './styles.module.css';

type FeatureItem = {
  title: string;
  Svg: React.ComponentType<React.ComponentProps<'svg'>>;
  description: ReactNode;
};

const FeatureList: FeatureItem[] = [
  {
    title: 'üöÄ –ü—Ä–æ—Å—Ç–æ—Ç–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏',
    Svg: require('@site/static/img/undraw_docusaurus_mountain.svg').default,
    description: (
      <>
        CloudPayments SDK —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –∏ –ø—Ä–æ—Å—Ç–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –ø–ª–∞—Ç–µ–∂–µ–π –≤
        –≤–∞—à–µ React Native –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ. –í—Å–µ–≥–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫ –∫–æ–¥–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞
        —Ä–∞–±–æ—Ç—ã.
      </>
    ),
  },
  {
    title: 'üí≥ –í—Å–µ —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã',
    Svg: require('@site/static/img/undraw_docusaurus_tree.svg').default,
    description: (
      <>
        –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö –∫–∞—Ä—Ç, Apple Pay, Google Pay, –°–ë–ü, Tinkoff Pay,
        SberPay. –û–¥–∏–Ω SDK –¥–ª—è –≤—Å–µ—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Å–ø–æ—Å–æ–±–æ–≤ –æ–ø–ª–∞—Ç—ã –≤ –†–æ—Å—Å–∏–∏.
      </>
    ),
  },
  {
    title: 'üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å PCI DSS',
    Svg: require('@site/static/img/undraw_docusaurus_react.svg').default,
    description: (
      <>
        –ü–æ–ª–Ω–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º PCI DSS. –î–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –Ω–∞
        –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–∞—Ö CloudPayments, –Ω–µ –ø—Ä–æ—Ö–æ–¥—è —á–µ—Ä–µ–∑ –≤–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.
      </>
    ),
  },
];

function Feature({ title, Svg, description }: FeatureItem) {
  return (
    <div className={clsx('col col--4')}>
      <div className="text--center">
        <Svg className={styles.featureSvg} role="img" />
      </div>
      <div className="text--center padding-horiz--md">
        <Heading as="h3">{title}</Heading>
        <p>{description}</p>
      </div>
    </div>
  );
}

export default function HomepageFeatures(): ReactNode {
  return (
    <section className={styles.features}>
      <div className="container">
        <div className="row">
          {FeatureList.map((props, idx) => (
            <Feature key={idx} {...props} />
          ))}
        </div>
      </div>
    </section>
  );
}
