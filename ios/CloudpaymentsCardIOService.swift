import Foundation
import CardIO
import Cloudpayments

/**
 * CardIO —Å–∫–∞–Ω–µ—Ä –¥–ª—è CloudPayments SDK iOS
 * –†–µ–∞–ª–∏–∑—É–µ—Ç –ø—Ä–æ—Ç–æ–∫–æ–ª PaymentCardScanner –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Ñ–æ—Ä–º–æ–π
 */
@objc(CloudpaymentsCardIOService)
public class CloudpaymentsCardIOService: NSObject {

    // MARK: - Properties

    /// Callback –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    private var scannerCompletion: ((String?, UInt?, UInt?, String?) -> Void)?

    /// JavaScript –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è CardIO –∏–∑ React Native
    private let config: [String: Any]?

    // MARK: - Initialization

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞ CardIO
     * @param config –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–∑ JavaScript (cardScannerConfig)
     */
    @objc public init(config: [String: Any]?) {
        self.config = config
        super.init()
    }

    /**
     * –§–∞–±—Ä–∏—á–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–∫–∞–Ω–µ—Ä–∞ –∏–∑ JavaScript –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
     * @param config –°–ª–æ–≤–∞—Ä—å —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ CardIO –∏–∑ React Native
     * @return –ù–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä CloudpaymentsCardIOService –∏–ª–∏ nil
     */
    @objc public static func fromJSConfig(_ config: [String: Any]?) -> CloudpaymentsCardIOService? {
        return CloudpaymentsCardIOService(config: config)
    }
}

// MARK: - PaymentCardScanner Protocol

extension CloudpaymentsCardIOService: PaymentCardScanner {
    
    /**
     * –ó–∞–ø—É—Å–∫ —Å–∫–∞–Ω–µ—Ä–∞ –∫–∞—Ä—Ç
     * @param completion Callback —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è (–Ω–æ–º–µ—Ä, –º–µ—Å—è—Ü, –≥–æ–¥, CVV)
     * @return UIViewController –¥–ª—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏ –∏–ª–∏ nil –ø—Ä–∏ –æ—à–∏–±–∫–µ
     */
    public func startScanner(completion: @escaping (String?, UInt?, UInt?, String?) -> Void) -> UIViewController? {
        print("üîç CloudpaymentsCardIOService.startScanner: –ó–∞–ø—É—Å–∫")
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º callback –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        self.scannerCompletion = completion

        // –°–æ–∑–¥–∞–µ–º CardIO –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä
        guard let scanController = CardIOPaymentViewController(paymentDelegate: self) else {
            print("‚ùå CloudpaymentsCardIOService.startScanner: –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ CardIO")
            return nil
        }

        print("‚úÖ CloudpaymentsCardIOService.startScanner: CardIO –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä —Å–æ–∑–¥–∞–Ω")
        
        // –ë–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        scanController.collectExpiry = true
        scanController.collectCVV = false
        scanController.hideCardIOLogo = true
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –µ—Å–ª–∏ –µ—Å—Ç—å
        if let config = self.config {
            applyConfig(to: scanController, config: config)
        }

        return scanController
    }
    
    /**
     * –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∫ CardIO –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—É
     */
    private func applyConfig(to controller: CardIOPaymentViewController, config: [String: Any]) {
        if let collectExpiry = config["collectExpiry"] as? Bool {
            controller.collectExpiry = collectExpiry
        }
        
        if let collectCVV = config["collectCVV"] as? Bool {
            controller.collectCVV = collectCVV
        }
        
        if let hideCardIOLogo = config["hideCardIOLogo"] as? Bool {
            controller.hideCardIOLogo = hideCardIOLogo
        }
        
        if let allowFreelyRotatingCardGuide = config["allowFreelyRotatingCardGuide"] as? Bool {
            controller.allowFreelyRotatingCardGuide = allowFreelyRotatingCardGuide
        }
        
        print("‚úÖ CloudpaymentsCardIOService: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∞")
    }
}

// MARK: - CardIOPaymentViewControllerDelegate

extension CloudpaymentsCardIOService: CardIOPaymentViewControllerDelegate {

    /**
     * –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–º–µ–Ω–∏–ª —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
     */
    public func userDidCancel(_ paymentViewController: CardIOPaymentViewController!) {
        print("üîç CloudpaymentsCardIOService: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–º–µ–Ω–∏–ª —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ")
        paymentViewController.dismiss(animated: true, completion: nil)
    }

    /**
     * –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–ª –∫–∞—Ä—Ç—É
     * @param cardInfo –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞—Ä—Ç–µ
     * @param paymentViewController CardIO –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä
     */
    public func userDidProvide(_ cardInfo: CardIOCreditCardInfo!, in paymentViewController: CardIOPaymentViewController!) {
        print("üéØ CloudpaymentsCardIOService: –ö–∞—Ä—Ç–∞ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        print("üì± CloudpaymentsCardIOService: –ù–æ–º–µ—Ä=\(cardInfo.cardNumber ?? "nil"), –ú–µ—Å—è—Ü=\(cardInfo.expiryMonth), –ì–æ–¥=\(cardInfo.expiryYear), CVV=\(cardInfo.cvv ?? "nil")")
        
        // –ü–µ—Ä–µ–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã —á–µ—Ä–µ–∑ callback
        self.scannerCompletion?(
            cardInfo.cardNumber,
            cardInfo.expiryMonth,
            cardInfo.expiryYear,
            cardInfo.cvv
        )

        // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–∫–∞–Ω–µ—Ä
        paymentViewController.dismiss(animated: true, completion: nil)
    }
} 
